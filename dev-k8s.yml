apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    purpose: dev
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users

  template:
    metadata:
      labels:
        app: users

    spec:
      containers:
        - name: users
          image: users
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 4000
          env:
            #app
            - name: ENV
              value: local
            - name: PORT
              value: "4000"
            #postgres
            - name: POSTGRES_HOST
              value: postgres-postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USERNAME
              value: postgres
            - name: POSTGRES_DATABASE
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-postgresql
                  key: postgres-password
            # rabbitmq
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: RABBITMQ_ACCESS_PORT
              value: "5672"
            - name: RABBITMQ_USER
              value: user
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
            # aws
            # - name: AWS_ACCESS_KEY_ID
            #   valueFrom:
            #     secretKeyRef:
            #       name: aws
            #       key: aws-access-key-id
            # - name: AWS_SECRET_ACCESS_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: aws
            #       key: aws-secret-access-key
            # - name: AWS_S3_BUCKET_NAME
            #   valueFrom:
            #     secretKeyRef:
            #       name: aws
            #       key: aws-s3-bucket-name

---
apiVersion: v1
kind: Service
metadata:
  name: users
  labels:
    app: users
    service: users
  annotations:
    ingress.kubernetes.io/service-upstream: "true"
spec:
  ports:
    - port: 4000
      targetPort: 4000
      protocol: TCP
      name: http
  selector:
    app: users

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: users-ingress
  annotations:
    konghq.com/strip-path: "true"
    konghq.com/preserve-host: "false"
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /users
            pathType: ImplementationSpecific
            backend:
              service:
                name: users
                port:
                  number: 4000
